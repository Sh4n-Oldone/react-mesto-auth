{"version":3,"sources":["images/logo_white.svg","images/edit-profile-icon.svg","images/cousteau.jpg","components/Header.js","utils/token.js","utils/utils.js","components/Card.js","context/CurrentUserContext.js","context/CardsContext.js","components/Main.js","components/Footer.js","components/Login.js","components/Register.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","utils/auth.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","user","history","useHistory","className","src","logo","alt","exact","path","email","type","onClick","localStorage","removeItem","push","owner","document","querySelector","Card","card","_id","onDeleteClick","link","name","onCardClick","url","description","likes","some","i","onLikeClick","length","CurrentUserContext","React","createContext","CardsContext","Main","onEditAvatar","onEditProfile","onAddPlace","onRemoveClickPopup","Consumer","value","avatar","avatarPointer","cards","map","key","Footer","isOpen","Login","handleLogin","useState","password","message","state","setState","handleChange","e","target","prevState","placeholder","onChange","required","event","preventDefault","Register","registerFetchOnSubmit","PopupWithForm","props","title","onSubmit","children","onClose","ImagePopup","myApi","options","this","_userUrl","userUrl","_cardsUrl","cardsUrl","_headers","headers","fetch","then","res","ok","json","Promise","reject","status","data","method","body","JSON","stringify","about","isLiked","removeLike","putLike","authorization","EditProfilePopup","onUpdateUser","setName","setDescription","currentUser","useContext","useEffect","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","refInput","useRef","current","ref","defaultValue","AddPlacePopup","handleNewPlace","refInputName","refInputUrl","ProtectedRoute","Component","component","loggedIn","to","BASE_URL","authorize","console","log","token","setItem","InfoTooltip","isError","App","isEditProfilePopupOpen","isAddPlacePopupOpen","isEditAvatarPopupOpen","isRemoveCardPopupOpen","isInfoTooltipOpen","popupsState","popupsSetState","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","userData","setUserData","registrationErrorStatus","setRegistrationErrorStatus","handleInfoTooltipOpen","closeAllPopups","tokenCheck","jwt","getItem","all","getUserData","getCardsData","profileData","cardsData","catch","error","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","item","auth","err","setNewAvatar","setCardsData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be6d7fd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.94cbab21.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-profile-icon.d476a8b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/cousteau.f3e9a11e.jpg\";","import React from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\n// import { useMediaQuery } from 'react-responsive';\r\nimport logo from '../images/logo_white.svg';\r\nimport { removeToken } from '../utils/token';\r\n\r\nexport default function Header({user}) {\r\n  const history = useHistory();\r\n\r\n  // const isSmallScreen = useMediaQuery({ query: (max-width: 760px) });\r\n  // Конечно, мы же не можем использовать удобные штуки -_-\r\n\r\n\r\n  return (\r\n    <>\r\n      <header className='header'>\r\n        <img src={logo} alt='Логотип' className='logo' />          \r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <div className='header__user_wrapper'>\r\n              <p className='header__user'>{user.email}</p>\r\n              <button \r\n                type='button' \r\n                className='button-style__reset header__button header__button_exit'\r\n                onClick={() => {\r\n                  removeToken()\r\n                  history.push('./sign-in')\r\n                }}  \r\n              >Выйти</button>\r\n            </div>\r\n          </Route>\r\n          <Route path='/sign-in'>\r\n            <button \r\n              type='button' \r\n              className='button-style__reset header__button header__button_sign-in'\r\n              onClick={() => {history.push('./sign-up')}}\r\n            >Регистрация</button>\r\n          </Route>\r\n          <Route path='/sign-up'>\r\n            <button \r\n              type='button' \r\n              className='button-style__reset header__button header__button_sign-up'\r\n              onClick={() => {history.push('./sign-in')}}\r\n            >Войти</button>\r\n          </Route>\r\n        </Switch>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","const TOKEN_KEY = 'jwt';\r\n\r\nexport const setToken = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(TOKEN_KEY)};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(TOKEN_KEY)\r\n}\r\n","export const page = document.querySelector('.page');\r\nexport const popUpUser = document.querySelector('.popup-profile');\r\nexport const popUpCard = document.querySelector('.popup-card');\r\nexport const popUpImg = document.querySelector('.popup-image');\r\nexport const popUpSubmit = document.querySelector('.popup-submit');\r\nexport const popUpAvatar = document.querySelector('.popup-avatar');\r\n\r\nexport const editButtonUser = document.querySelector('.profile__edit-button');\r\nexport const addButtonCard = document.querySelector('.profile__add-button');\r\n\r\nexport const profileName = document.querySelector('.profile__name');\r\nexport const profileTitle = document.querySelector('.profile__title');\r\nexport const profileAvatar = document.querySelector('.profile__pic');\r\n\r\nexport const cardsList = document.querySelector('.cards__list'); // список карточек\r\n\r\nexport const owner = 'ed99dd7809a559eac419471a';\r\n\r\nexport const validationSelectors = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__save-button',\r\n  inactiveButtonClass: 'popup__save-button_disabled',\r\n  inputErrorClass: 'popup__input_error'\r\n}","import React from 'react';\r\nimport {owner} from \"../utils/utils\";\r\n\r\nconst Card = (card) => {\r\n\r\n  function handleClick() {\r\n    card.onCardClick({url: card.link, description: card.name});\r\n  }\r\n\r\n  return (\r\n    <li className='card'>\r\n      <button\r\n        className={\r\n          `card__remove-button button-style__reset \r\n          ${card.owner._id === owner ? 'card__remove-button_visible' : 'card__remove-button_hide'}`}\r\n        onClick={() => {card.onDeleteClick(card)}}/>\r\n      <img className='card__image' src={card.link} alt={card.name} onClick={handleClick} />\r\n      <div className='card__item'>\r\n        <h3 className='card__title'>{card.name}</h3>\r\n        <div className='card__like-container'>\r\n          <button\r\n            className={\r\n              `card__like-button button-style__reset\r\n              ${card.likes.some(i => i._id === owner) ? ' card__like-button_pressed' : ''}`}\r\n            onClick={() => {card.onLikeClick(card)}}/>\r\n          <p className='card__like-counter'>{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n\r\n};\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nconst CurrentUserContext = React.createContext('');\r\n\r\nexport default CurrentUserContext;","import React from \"react\";\r\n\r\nconst CardsContext = React.createContext('');\r\n\r\nexport default CardsContext;","import React from 'react';\r\nimport avatarPointer from '../images/edit-profile-icon.svg';\r\nimport Card from '../components/Card.js';\r\nimport CurrentUserContext from \"../context/CurrentUserContext\";\r\nimport CardsContext from \"../context/CardsContext\";\r\n\r\nexport default function Main({\r\n  onEditAvatar, \r\n  onEditProfile, \r\n  onAddPlace, \r\n  onCardClick, \r\n  onRemoveClickPopup, \r\n  onLikeClick, \r\n  onDeleteClick}) {\r\n\r\n  return (\r\n\r\n    <main className='content'>\r\n      <CurrentUserContext.Consumer>\r\n        {value =>\r\n          <section className='profile'>\r\n            <div className='profile__overlay'>\r\n              <img src={value.avatar}\r\n                   alt={`Фото: ${value.name}`}\r\n                   className='profile__pic'\r\n                   onClick={onEditAvatar}\r\n              />\r\n              <img src={avatarPointer}\r\n                   alt='edit-icon'\r\n                   className='profile__edit-icon'\r\n              />\r\n            </div>\r\n            <div className='profile__info'>\r\n              <div className='profile__wrapper'>\r\n                <h1 className='profile__name'>{`${value.name}`}</h1>\r\n                <button className='profile__edit-button button-style__reset' onClick={onEditProfile}/>\r\n              </div>\r\n              <p className='profile__title'>{`${value.description}`}</p>\r\n            </div>\r\n            <button className='profile__add-button button-style__reset' onClick={onAddPlace}/>\r\n          </section>\r\n        }\r\n      </CurrentUserContext.Consumer>\r\n\r\n      <CardsContext.Consumer>\r\n        {cards =>\r\n          <section className='cards'>\r\n            <ul className='cards__list'>\r\n              {cards.map(card =>\r\n                <Card {...card}\r\n                      key={card._id}\r\n                      onCardClick={onCardClick}\r\n                      onRemoveClickPopup={onRemoveClickPopup}\r\n                      onLikeClick={onLikeClick}\r\n                      onDeleteClick={onDeleteClick}\r\n                />\r\n              )}\r\n            </ul>\r\n          </section>\r\n        }\r\n      </CardsContext.Consumer>\r\n    </main>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer({isOpen}) {\r\n  return (\r\n    <>\r\n      {isOpen\r\n      ? <footer className='footer'>\r\n          <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n      : ''\r\n      }\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Login({handleLogin}) {\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n    message: ''\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name,  value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { email, password } = state;\r\n    if (!email || !password){\r\n      return;\r\n    }\r\n    handleLogin(email, password, state);\r\n    setState({ email: '', password: '', message: '' });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className='login'>\r\n        <form className='login__form'>\r\n            <h2 className='login__title'>Вход</h2>\r\n            <input \r\n              className='input-style__reset login__form_input login__form_email' \r\n              name='email' \r\n              value={state.email || ''} \r\n              placeholder='Email' \r\n              type='email' \r\n              onChange={handleChange} \r\n              required\r\n            ></input>\r\n            <input \r\n              className='input-style__reset login__form_input login__form_password' \r\n              name='password' \r\n              value={state.password || ''} \r\n              placeholder='Пароль' \r\n              type='password' \r\n              onChange={handleChange} \r\n              required\r\n            ></input>\r\n          <button \r\n            type='submit'\r\n            className='login__form_button button-style__reset' \r\n            onClick={handleSubmit}\r\n          >Войти</button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  )\r\n};","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Register({registerFetchOnSubmit}) {\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const handleChange = (e) => {\r\n    const { name,  value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = state;\r\n    if (!email || !password){\r\n      return;\r\n    }\r\n    if (email && password){\r\n      return registerFetchOnSubmit(password, email);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <section className='login'>\r\n        <form className='login__form'>\r\n            <h2 className='login__title'>Регистрация</h2>\r\n            <input \r\n              className='input-style__reset login__form_input login__form_email' \r\n              name='email' \r\n              value={state.email || ''}\r\n              placeholder='Email' \r\n              type='email' \r\n              onChange={handleChange} \r\n              required\r\n            ></input>\r\n            <input \r\n              className='input-style__reset login__form_input login__form_password' \r\n              placeholder='Пароль' \r\n              name='password' \r\n              value={state.password || ''}\r\n              type='password' \r\n              onChange={handleChange} \r\n              required\r\n            ></input>\r\n          <button \r\n            type='submit'\r\n            className='login__form_button button-style__reset'\r\n            onClick={handleSubmit}\r\n          >Зарегистрироваться</button>\r\n        </form>\r\n        <button \r\n          className='login__redirect_button button-style__reset' \r\n          onClick={() => {history.push('./sign-in')}}\r\n        >Уже зарегистрированы? Войти</button>\r\n      </section>\r\n    </>\r\n  )\r\n};","import React from 'react';\r\n\r\nexport default function PopupWithForm(props) {\r\n\r\n  return (\r\n    <>\r\n      <section className={`popup popup-${props.name}${\r\n        props.isOpen ? ' popup_opened' : ''\r\n      }`}\r\n      >\r\n        <div className='popup__container'>\r\n          <h2 className='popup__title'>{props.title}</h2>\r\n          <form className='popup__form'\r\n                name={props.name}\r\n                onSubmit={props.onSubmit}\r\n          >\r\n            {props.children}\r\n            <button type='submit'\r\n                    className='popup__save-button button-style__reset'\r\n            >Сохранить</button>\r\n          </form>\r\n          <button type='button'\r\n                  className='popup__close-button button-style__reset'\r\n                  onClick={props.onClose}\r\n          />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function ImagePopup({card, name, onClose}) {\r\n\r\n  return (\r\n    <section className={`popup popup-${name}${\r\n      card ? ' popup_opened' : ''\r\n    }`}>\r\n      <div className='popup-image__container'>\r\n        <img src={card.url} alt={card.description} className='popup-image__image'/>\r\n        <p className='popup-image__title'>{card.description}</p>\r\n        <button type='button' className='popup__close-button button-style__reset' onClick={onClose}/>\r\n      </div>\r\n    </section>\r\n  )\r\n}","class Api {\r\n  constructor(options) {\r\n    this._userUrl = options.userUrl;\r\n    this._cardsUrl = options.cardsUrl;\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(this._userUrl, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  getCardsData() {\r\n    return fetch(this._cardsUrl, {\r\n      headers: this._headers\r\n    })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  setUserData(data) {\r\n    return fetch(this._userUrl, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about\r\n      })\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  setCardsData(data) {\r\n    return fetch(this._cardsUrl, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link\r\n      })\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  removeCard(_id) {\r\n    return fetch(this._cardsUrl + '/' + _id, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  putLike(_id) {\r\n    return fetch(this._cardsUrl + '/likes/' + _id, {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  removeLike(_id) {\r\n    return fetch(this._cardsUrl + '/likes/' + _id, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  changeLikeCardStatus(_id, isLiked) {\r\n    if (isLiked) {\r\n      return this.removeLike(_id)\r\n    } else {\r\n      return this.putLike(_id)\r\n    }\r\n  }\r\n\r\n  setNewAvatar(data) {\r\n    return fetch(this._userUrl + '/avatar', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatar\r\n      })\r\n    }).then(res => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    })\r\n  }\r\n}\r\n\r\nconst myApi = new Api({\r\n  userUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/users/me',\r\n  cardsUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/cards',\r\n  headers: {\r\n    authorization: '14950384-2a2e-482b-8250-dfb0e0c885f3',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default myApi;","import React, {useEffect, useContext} from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport CurrentUserContext from \"../context/CurrentUserContext\";\r\n\r\nexport default function EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n\r\n  const [name, setName] = React.useState('Жак-Ив Кусто')\r\n  const [description, setDescription] = React.useState('Исследователь океана')\r\n\r\n  const currentUser = useContext(CurrentUserContext)\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.description);\r\n  }, [currentUser]);\r\n\r\n  const handleInputName = (event) => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handleInputDescription = (event) => {\r\n    setDescription(event.target.value)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onUpdateUser({\r\n      name: name,\r\n      about: description\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={'profile'}\r\n      title={'Редактировать профиль'}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <small className='popup__input_type_error input_name_error-message'/>\r\n      <input type='text'\r\n             name={'profile'}\r\n             value={name}\r\n             placeholder='Ваше имя'\r\n             className='popup__input popup__input_name'\r\n             minLength='2'\r\n             maxLength='40'\r\n             required\r\n             onChange={handleInputName}\r\n      />\r\n      <small className='popup__input_type_error input_title_error-message'/>\r\n      <input type='text'\r\n             name={'Редактировать профиль'}\r\n             value={description}\r\n             placeholder='Ваша работа'\r\n             className='popup__input popup__input_title'\r\n             minLength='2'\r\n             maxLength='200'\r\n             required\r\n             onChange={handleInputDescription}\r\n      />\r\n    </PopupWithForm>\r\n  )\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n\r\n  const refInput = useRef(null)\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onUpdateAvatar({\r\n      avatar: refInput.current.value\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen === false) {\r\n      refInput.current.value = '';\r\n    }\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={'avatar'}\r\n      title={'Новый аватар'}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <small\r\n        className='popup__input_type_error input_title_error-message'\r\n      />\r\n      <input\r\n        ref={refInput}\r\n        type='url'\r\n        name='avatar'\r\n        defaultValue={''}\r\n        placeholder='Ссылка на аватар'\r\n        className='popup__input popup__input_title'\r\n        required\r\n      />\r\n    </PopupWithForm>\r\n  )\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nexport default function AddPlacePopup({isOpen, onClose, handleNewPlace}) {\r\n\r\n  const refInputName = useRef(null)\r\n  const refInputUrl = useRef(null)\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleNewPlace({\r\n      name: refInputName.current.value,\r\n      link: refInputUrl.current.value\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen === false) {\r\n      refInputName.current.value = '';\r\n      refInputUrl.current.value = '';\r\n    }\r\n  }, [isOpen])\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name={'card'}\r\n      title={'Новое место'}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <small\r\n        className='popup__input_type_error input_name_error-message'\r\n      />\r\n      <input\r\n        ref={refInputName}\r\n        type='text'\r\n        name='name'\r\n        defaultValue={''}\r\n        placeholder='Название'\r\n        className='popup__input popup__input_name'\r\n        minLength='1'\r\n        maxLength='30'\r\n        required\r\n      />\r\n      <small className='popup__input_type_error input_title_error-message'/>\r\n      <input\r\n        ref={refInputUrl}\r\n        type='url'\r\n        name='link'\r\n        defaultValue={''}\r\n        placeholder='Ссылка на карточку'\r\n        className='popup__input popup__input_title'\r\n        required\r\n      />\r\n    </PopupWithForm>\r\n\r\n  )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {\r\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to='./sign-in' />\r\n      }\r\n    </Route>\r\n  )\r\n};\r\n\r\nexport default ProtectedRoute;","import { setToken } from '../utils/token';\r\n\r\nexport const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.status === 400) {\r\n      const error = {error: 'ошибка'};\r\n      console.log('Некорректно заполнено одно из полей при регистрации');\r\n      return error;\r\n    }\r\n    if (res.status !== 200 || res.status !== 201) {\r\n      console.log(res.status);\r\n      return res.json();\r\n    }\r\n  })\r\n};\r\n\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password\r\n    })\r\n  })\r\n  .then(res => {\r\n    if (res.status === 400) {\r\n      console.log('Не передано одно из полей для проверки пользователя');\r\n    }\r\n    if (res.status === 401) {\r\n      console.log('Пользователь с таким email не найден');\r\n    }\r\n    if (res.status !== 200 || res.status !== 201) {\r\n      return res.json();\r\n    }\r\n  })\r\n  .then((data) => {\r\n    if (data.token){\r\n      setToken(data.token);\r\n      return data;\r\n    } else {\r\n      return;\r\n    }\r\n  })\r\n};\r\n\r\nexport const getContent = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n  .then(res => {\r\n    if (res.status === 401) {\r\n      console.log('Некорректная отправка токена')\r\n    }\r\n    return res.json();\r\n  })\r\n  .then((data) => {\r\n      return data;\r\n  })\r\n}\r\n","import React from 'react';\r\n\r\nexport default function InfoTooltip({isOpen, onClose, isError}) {\r\n  return (\r\n    <>\r\n      <section className={`info-tooltip${isOpen ? ' info-tooltip_opened' : ''}`}>\r\n        <div className='info-tooltip__container'>\r\n          <div\r\n            className={`info-tooltip__image${isError \r\n              ? ' info-tooltip__image_error' \r\n              : ' info-tooltip__image_normal'}`}\r\n          />\r\n          <p className='info-tooltip__subtitle'>\r\n          {isError \r\n            ? 'Что-то пошло не так! Попробуйте ещё раз.' \r\n            : 'Вы успешно зарегистрировались!'}  \r\n          </p>\r\n          <button\r\n          type='button'\r\n          className='popup__close-button button-style__reset'\r\n          onClick={onClose}\r\n        />\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n};","import React, {useEffect, useState} from 'react';\nimport { Redirect, Route, Switch, useHistory } from \"react-router\";\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport myApi from \"../utils/api\";\nimport avatar from '../images/cousteau.jpg';\nimport CurrentUserContext from \"../context/CurrentUserContext\";\nimport CardsContext from \"../context/CardsContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ProtectedRoute from './ProtectedRoute.js';\nimport * as auth from '../utils/auth.js';\nimport { getToken } from '../utils/token';\nimport InfoTooltip from './InfoTooltip.js';\n\nexport default function App() {\n  const [popupsState, popupsSetState] = useState({\n    isEditProfilePopupOpen: false,\n    isAddPlacePopupOpen: false,\n    isEditAvatarPopupOpen: false,\n    isRemoveCardPopupOpen: false,\n    isInfoTooltipOpen: false\n  })\n  const [selectedCard, setSelectedCard] = useState('')\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Жак-Ив Кусто',\n    description: 'Исследователь океана',\n    avatar: avatar,\n    _id: 0\n  })\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userData, setUserData] = useState({email: ''});\n  const history = useHistory();\n  const [registrationErrorStatus, setRegistrationErrorStatus] = useState(false);\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    Promise.all([\n      myApi.getUserData(),\n      myApi.getCardsData()\n    ])\n      .then((res) => {\n        const [profileData, cardsData] = res;\n        setCurrentUser({\n          name: profileData.name,\n          description: profileData.about,\n          avatar: profileData.avatar,\n          _id: profileData._id\n        });\n        setCards(cardsData);\n      })\n      .catch((error) => {\n        console.log('Я получал данные о профиле и карточках. Я сломался. Ошибка: ' + error)\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    myApi.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((error) => {\n        console.log('Я работал с лайком. Я сломался. Ошибка: ' + error)\n      });\n  }\n\n  function handleCardDelete(card) {\n    myApi.removeCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(item => card._id !== item._id);\n        setCards(newCards);\n      })\n      .catch((error) => {\n        console.log('Я удалял карточку. Я сломался. Ошибка: ' + error)\n      });\n  }\n\n  function handleUpdateUser(data) {\n    myApi.setUserData(data)\n      .then((res) => {\n        setCurrentUser({\n          name: res.name,\n          description: res.about,\n          avatar: res.avatar,\n          _id: res._id\n        })\n      })\n      .then(() => {closeAllPopups()})\n      .catch((error) => {\n        console.log('Я менял данные пользователя. Я сломался. Ошибка: ' + error)\n      });\n  }\n\n  function handleUpdateAvatar(data) {\n    myApi.setNewAvatar(data)\n      .then((res) => {\n        setCurrentUser({\n          name: currentUser.name,\n          description: currentUser.description,\n          avatar: res.avatar,\n          _id: currentUser._id\n        })\n      })\n      .then(() => {closeAllPopups()})\n      .catch((error) => {\n        console.log('Я отправлял новый аватар. Я сломался. Ошибка: ' + error)\n      });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    myApi.setCardsData(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n      })\n      .then(() => {closeAllPopups()})\n      .catch((error) => {\n        console.log('Я добавлял новую карточку. Я сломался. Ошибка: ' + error)\n      });\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleEditProfileClick() {\n    popupsSetState({...popupsState, isEditProfilePopupOpen: !popupsState.isEditProfilePopupOpen})\n  }\n  function handleAddPlaceClick() {\n    popupsSetState({...popupsState, isAddPlacePopupOpen: !popupsState.isAddPlacePopupOpen})\n  }\n  function handleEditAvatarClick() {\n    popupsSetState({...popupsState, isEditAvatarPopupOpen: !popupsState.isEditAvatarPopupOpen})\n  }\n  function handleRemoveCardClickPopupOpen() {\n    popupsSetState({...popupsState, isRemoveCardPopupOpen: !popupsState.isRemoveCardPopupOpen})\n  }\n  function handleInfoTooltipOpen() {\n    popupsSetState({...popupsState, isInfoTooltipOpen: !popupsState.isInfoTooltipOpen})\n  }\n  function closeAllPopups() {\n    popupsSetState({\n      ...popupsState, isEditProfilePopupOpen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isRemoveCardPopupOpen: false,\n      isInfoTooltipOpen: false\n    });\n    setSelectedCard('')\n  }\n\n  function handleLogin(userData) {\n    setUserData(userData);\n    setLoggedIn(true);\n  }\n\n  function tokenCheck () {\n    const jwt = getToken();\n\n    if (!jwt) {\n      return;\n    };\n\n    if (jwt) {\n      return auth.getContent(jwt)\n              .then((res) => {\n                setLoggedIn(true);\n                setUserData({email: res.data.email});\n                history.push('/');\n              });\n    }\n  }\n\n  function apiRegister(password, email) {\n    auth.register(password, email)\n      .then((data) => {\n        if (data.error) {\n          setRegistrationErrorStatus(true);\n          handleInfoTooltipOpen();\n        }\n        if (!data){\n          setRegistrationErrorStatus(true);\n          handleInfoTooltipOpen();\n        }\n        if (data.data._id) {\n          history.push('/sign-in');\n          setRegistrationErrorStatus(false);\n          handleInfoTooltipOpen();\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  function apiLoginCheck (email, password, userData) {\n    auth.authorize(email, password)\n      .then((data) => {\n        if (!data){\n          setRegistrationErrorStatus(true);\n          handleInfoTooltipOpen();\n          tokenCheck();\n        } else {\n          handleLogin(userData);\n          setRegistrationErrorStatus(false);\n          history.push('/');\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <div className='App'>\n      <div className='page'>\n        <div className='page__container'>\n\n          <CurrentUserContext.Provider value={currentUser}>\n            <CardsContext.Provider value={cards}>\n              <Header user={userData}/>\n                <Switch>\n\n                  <ProtectedRoute exact path='/'\n                    loggedIn={loggedIn}\n                    component={Main}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    onRemoveClickPopup={handleRemoveCardClickPopupOpen}\n                    onLikeClick={handleCardLike}\n                    onDeleteClick={handleCardDelete}\n                  />\n\n                  <Route path='/sign-up'>\n                    <Register\n                      registerFetchOnSubmit={apiRegister}\n                    />\n                  </Route>\n                  \n                  <Route path='/sign-in'>\n                    <Login\n                      handleLogin={apiLoginCheck}\n                    />\n                  </Route>\n\n                  <Route>\n                    {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n                  </Route>\n\n                </Switch>\n\n              <Footer\n                isOpen={loggedIn}\n              />\n\n              <EditProfilePopup\n                  isOpen={popupsState.isEditProfilePopupOpen}\n                  onClose={closeAllPopups}\n                  onUpdateUser={handleUpdateUser}\n              />\n              <EditAvatarPopup\n                  isOpen={popupsState.isEditAvatarPopupOpen}\n                  onClose={closeAllPopups}\n                  onUpdateAvatar={handleUpdateAvatar}\n              />\n              <AddPlacePopup\n                  isOpen={popupsState.isAddPlacePopupOpen}\n                  onClose={closeAllPopups}\n                  handleNewPlace={handleAddPlaceSubmit}\n              />\n              <PopupWithForm\n                  name={'submit'}\n                  title={'Вы уверены?'}\n                  isOpen={popupsState.isRemoveCardPopupOpen}\n                  onClose={closeAllPopups}\n              />\n              <ImagePopup\n                  card={selectedCard}\n                  name={'image'}\n                  onClose={closeAllPopups}\n                >\n              </ImagePopup>\n              <InfoTooltip\n                isOpen={popupsState.isInfoTooltipOpen} \n                onClose={closeAllPopups} \n                isError={registrationErrorStatus}\n              />\n              \n            </CardsContext.Provider>\n          </CurrentUserContext.Provider>\n\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}